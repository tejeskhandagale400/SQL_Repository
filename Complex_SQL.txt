

1)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME)
	ENAME	SAL	DNAME
	SMITH	800	RESEARCH

ANS:	mysql> SELECT E.FIRST_NAME,E.LAST_NAME,MIN(E.SALARY), D.DEPARTMENT_NAME FROM EMPLOYEES E JOIN  DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_id;


2)	LIST MINIMUM SALARY FOR EACH DEPARTMENT
	DEPTNO		MIN(SAL)
	10		1300
	20		800
	30		950

ANS:	mysql> SELECT MIN(salary),first_name, department_id
    -> From employees
    -> GROUP BY department_id;

3)	WRITE A QUERY  BASED ON  FOLLOWING RESULT. 

EMPNO	ENAME	JOB	SAL	DEPTNO	DNAME
7369	SMITH	CLERK	800	20	RESEARCH
7900	JAMES   CLERK	950	30	SALES
7934	MILLER  CLERK	1300	10	ACCOUNTING

ANS:	mysql> SELECT e.employee_id,e.first_name,e.job_id,e.salary,e.department_id,d.department_name
    -> FROM employees e JOIN departments d
    -> ON e.department_id=d.department_id;

4)	LIST ALL THE EMPLOYEES WHO ARE WORKING IN FORD’S DEPARTMENT.

	EMPNO	ENAME	JOB	MGR	HIREDATE	SAL	DEPTNO
	7369	SMITH	CLERK	7902	17-Dec-00	800	20
	7566	JONES	MANAGER	7839	02-Apr-01	2975	20
	7788	SCOTT	ANALYST	7566	19-Apr-07	3000	20
	7876	ADAMS	CLERK	7788	23-May-07	1100	20
	7902	FORD	ANALYST	7566	03-Dec-01	3000	20

ANS:	  mysql> SELECT e.employee_id,e.first_name, e.job_id,d.manager_id,e.hire_date,e.salary,d.department_id
  	  -> FROM employees e JOIN departments d ON e.department_id=d.department_id
    	-> WHERE department_name like 'sales';	
 

5)	LIST ALL EMPLOYEE WHO ARE WORKING IN WARD'S DEPARTMENT AND
	EARNING MORE THEN MARTIN

	EMPNO	ENAME	JOB	MGR	HIREDATE	SAL	DEPTNO
	7369	SMITH	CLERK	7902	17-Dec-00	800	20
	7566	JONES	MANAGER	7839	02-Apr-01	2975	20
	7788	SCOTT	ANALYST	7566	19-Apr-07	3000	20

ANS:	mysql> SELECT e.employee_id,e.first_name, e.job_id,d.manager_id,e.hire_date,e.salary,d.department_id
     -> FROM employees e JOIN departments d ON e.department_id=d.department_id
     -> WHERE d.department_id=50  AND e.salary> ANY(SELECT salary FROM employees WHERE e.first_name like "jean");


6)	DISPLAY EMPLOYEE NUMBER, NAME,DEPT NUMBER, DEPT NAME, AND LOCATION

	EMPNO	ENAME	DEPTNO	DNAME	LOC
	7369	SMITH	20	RESEARCH	DALLAS
	7499	ALLEN	30	SALES		CHICAGO
	7521	WARD	30	SALES		CHICAGO
	7566	JONES	20	RESEARCH	DALLAS
	7654	MARTIN	30	SALES		CHICAGO
	7698	BLAKE	30	SALES		CHICAGO
	7782	CLARK	10	ACCOUNTING	NEW YORK
	7788	SCOTT	20	RESEARCH	DALLAS
	7839	KING	10	ACCOUNTING	NEW YORK
	7844	TURNER	30	SALES		CHICAGO
	7876	ADAMS	20	RESEARCH	DALLAS
	7900	JAMES	30	SALES		CHICAGO
	7902	FORD	20	RESEARCH	DALLAS
	7934	MILLER	10	ACCOUNTING	NEW YORK

ANS:	mysql> SELECT e.employee_id,e.first_name, d.department_id, d.department_name,l.city
    -> FROM employees e
    -> INNER JOIN departments d ON  e.department_id=d.department_id
    -> INNER JOIN locations l ON l.location_id=d.location_id;	

7)	DISPLAY THE FOLLOWING RESULT

	DEPTNO	DNAME		ENAME
	10	ACCOUNTING	CLARK
	10	ACCOUNTING	KING
	10	ACCOUNTING	MILLER
	20	RESEARCH	JONES
	20	RESEARCH	FORD
	20	RESEARCH	ADAMS
	20	RESEARCH	SMITH
	20	RESEARCH	SCOTT
	30	SALES		WARD
	30	SALES		TURNER
	30	SALES		ALLEN
	30	SALES		JAMES
	30	SALES		BLAKE
	30	SALES		MARTIN

ANS:	mysql> SELECT d.department_id,d.department_name,e.first_name
  	  -> FROM employees e JOIN departments d ON e.department_id=d.department_id
 	   -> ORDER BY d.department_id,d.department_name;

8)	LIST ALL THE EMPLOYEE WHO ARE WORKING IN NEW YORK

	ENAME	DEPTNO	 DNAME		LOC
	CLARK	10	ACCOUNTING	NEW YORK
	KING	10	ACCOUNTING	NEW YORK
	MILLER	10	ACCOUNTING	NEW YORK
ANS:	mysql> SELECT e.first_name,e.department_id,d.department_name,l.city
    -> FROM employees e
    -> INNER JOIN departments d ON e.department_id=d.department_id
    -> INNER JOIN locations l ON l.location_id=d.location_id
    -> WHERE l.city like "oxford";	


9)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME) IN THE RESPECTIVE DEPARTMENT.

	ENAME		MIN(SAL)	DNAME
	SMITH		800		RESEARCH
	JAMES		950		SALES
	MILLER		1300		ACCOUNTING

ANS:	mysql> SELECT e.first_name,MIN(e.salary),d.department_name
       -> FROM employees e JOIN departments d
      -> ON e.department_id=d.department_id
      -> GROUP BY d.department_id;

10)	WRITE A SQL STATEMENT TO DISPLAY THE HIGHEST PAID EMPLOYEE'S (NAME, JOB, MANAGER NAME, SALARY AND DEPARTMENT NAME AND DEPARTMENT NO.) IN THE RESPECTIVE DEPARTMENT.

	EMPNO		JOB		MGR	MAX(SAL)	DNAME
	7698		MANAGER		7839	2850		SALES
	7788		ANALYST		7566	3000		RESEARCH
	7839		PRESIDENT		5000		ACCOUNTING
	7902		ANALYST		7566	3000		RESEARCH
ANS:	 mysql> SELECT e.employee_id,e.job_id,e.manager_id,MAX(e.salary),d.department_name
    -> FROM employees e JOIN departments d
    -> ON e.department_id=d.department_id
    -> GROUP BY d.department_id;



11)	WRITE A SQL STATEMENT TO DISPLAY THE EMPLOYEE NAME (BOSS) AND NUMBER OF EMPLOYEE (SUBORDINATES) DIRECTLY REPORTING TO HIM?

	BOSS		SUBORDINATES
	JONES		2
	FORD		1
	CLARK		1
	SCOTT		1
	BLAKE		5
	KING		3
ANS:	mysql> SELECT manager_id AS BOSS,COUNT(employee_id) AS SUBORDINATES
    -> FROM employees
    -> GROUP BY manager_id;


12)	DISPLAY THE NAMES, DESIGNATION AND SALARIES OF ALL EMPLOYEES WHO HAVE MANAGER ALONG WITH MANAGER'S NAME, DESIGNATION AND MANAGER'S SALARY.
	(SELF-JOIN)
ANS:	mysql> SELECT e.first_name AS names,e.job_id AS designation,e.salary,e.manager_id,m.first_name AS manager_name,m.job_id AS designation ,m.salary
    	-> from employees e
    	-> INNER JOIN employees m ON e.manager_id=m.employee_id;

13)	CREATE THE FOLLOWING TABLES:
	ORDER: {ID, ORDERDATE, ORDERNUMBER}
	ORDER_ITEM: {ID, ORDERID, PRODUCTID, UNITPRICE, QUANTITY}
	PRODUCT: {ID, PRODUCTNAME}
	WRITE A QUERY TO DISPLAY THE FOLLOWING OUTPUT SORTED BY ORDER NO:

	ORDER_NO	ORDER_DATE		PRODUCT_NAME		QUANTITY	UNIT_PRICE
	7369		7/4/2012 12:00:00 AM	EASY-TRADING		800		20
	7900		2/10/2011 12:00:00 AM	BANK-ANYWHERE		950		30
	7934		9/23/2015 12:00:00 AM	TRIP-MANAGER		1300		10







14)	 FIND THE 2ND MINIMUM SALARY OF THE EMPLOYEE.
ANS: 	mysql> SELECT DISTINCT(salary) FROM employees ORDER BY salary LIMIT 1,1;


15)	 FIND THE MAX 3 SALARIES FROM EMPLOYEE TABLE.
ANS:	mysql> SELECT DISTINCT(salary) FROM employees ORDER BY salary DESC LIMIT 1,3;

16)	DISPLAY COMMON RECORDS FROM EMP_1 & EMP_2 TABLES. (USE INTERSECT)
		

17)	 DISPLAY DEPARTMENT NO WISE TOTAL SALARY WHERE MORE THAN 2 EMPLOYEES EXIST IN A DEPARTMENT.

	mysql> SELECT SUM(SALARY), DEPARTMENT_ID,COUNT(DEPARTMENT_ID)
   	 -> FROM EMPLOYEES
   	 -> GROUP BY DEPARTMENT_ID
   	 -> HAVING COUNT(DEPARTMENT_ID)>2;



